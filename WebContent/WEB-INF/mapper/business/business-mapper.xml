<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="selectLoginBusinessMember">
select 
       H.HR_ID
     , H.HR_PWD
     , H.HR_NAME
     , H.HR_PHONE
     , H.HR_EMAIL
     , H.B_CODE
     , B.B_BLOCK
     , D.D_LIST_REASON
     , B.B_NAME
     , B.B_NUMBER
  FROM HR H
  join BUSINESS B on (H.B_CODE = B.B_CODE)
  join DECISION_LIST D on (B.D_LIST_CODE = D.D_LIST_CODE)
 WHERE H.HR_ID = ?
	</entry>
	<entry key="insertDecisionList">
       insert
         into decision_list 
       (
         D_LIST_REASON
       , D_LIST_DATE
       , ADMIN_ID
       , DECISION_CODE
       , D_LIST_TYPE_CODE
       )
       values
      (
        null
      , null
      , null
      , 1
      , 3
 	  )
	</entry>
	<entry key="insertBusiness">
       insert
         into business 
       (
         B_NAME
       , B_OWNER
       , B_NUMBER 
       , B_ADDRESS  
       , B_PHONE 
       , B_BLOCK 
       , B_PROFIT 
       , B_LOGO 
       , B_CATEGORY_CODE 
       , D_LIST_CODE 
       )
       values
       (
         ?
       , ? 
       , ?  
       , ?
       , ?
       , 0
       , ?
       , ?
       , ?
       , LAST_INSERT_ID()
       )
	</entry>
	<entry key="insertHr">
       insert
         into HR
       (
         hr_id
       , HR_PWD 
       , HR_NAME 
       , HR_PHONE 
       , HR_EMAIL 
       , B_CODE 
       )
       values
       (
         ?
       , ?
       , ?
       , ?	
       , ?
       , LAST_INSERT_ID()
       )
    </entry>
	<entry key="selectTotalCount">
		SELECT 
	   		   c.DECISION_CODE
	  		 , IFNULL(COUNT(a.POST_CODE), 0) as 'COUNT'
  		  FROM post a
  		  JOIN DECISION_LIST b on(a.D_LIST_CODE = b.D_LIST_CODE)
  		  JOIN DECISION c on(b.DECISION_CODE = c.DECISION_CODE)
 		 WHERE a.HR_ID = ?
 		 GROUP BY c.DECISION_CODE
         ORDER BY c.DECISION_CODE
	</entry>
	<entry key="selectPostList">
		SELECT
       			a.POST_CODE
     		  , c.DECISION_STATUS
     		  , a.POST_DATE
    		  , a.POST_TITLE
     		  , e.AD_NAME
     		  , a.POST_START
     		  , a.POST_END
     		  , COUNT(ap.APPLY_CODE) as "APPLICANTS"
  		   FROM POST a
  		   LEFT JOIN APPLY ap on(a.POST_CODE = ap.POST_CODE)
  		   LEFT JOIN DECISION_LIST b on(a.D_LIST_CODE = b.D_LIST_CODE)
  		   LEFT JOIN DECISION c on(b.DECISION_CODE = c.DECISION_CODE)
  		   LEFT JOIN POST_AD_PAYMENT d on(a.POST_CODE = d.POST_CODE)
  		   LEFT JOIN AD e on(d.AD_CODE = e.AD_CODE)
  		  WHERE a.HR_ID = ?
 		  GROUP BY a.POST_CODE, c.DECISION_STATUS , a.POST_DATE , a.POST_TITLE , e.AD_NAME ,a.POST_START , a.POST_END 
 		  ORDER BY a.POST_DATE DESC
 		  LIMIT ?, ?
	</entry>
	<entry key="selectPostListCategory">
		SELECT
       			a.POST_CODE
     		  , c.DECISION_STATUS
     		  , a.POST_DATE
    		  , a.POST_TITLE
     		  , e.AD_NAME
     		  , a.POST_START
     		  , a.POST_END
     		  , COUNT(ap.APPLY_CODE) as "APPLICANTS"
  		   FROM POST a
  		   LEFT JOIN APPLY ap on(a.POST_CODE = ap.POST_CODE)
  		   LEFT JOIN DECISION_LIST b on(a.D_LIST_CODE = b.D_LIST_CODE)
  		   LEFT JOIN DECISION c on(b.DECISION_CODE = c.DECISION_CODE)
  		   LEFT JOIN POST_AD_PAYMENT d on(a.POST_CODE = d.POST_CODE)
  		   LEFT JOIN AD e on(d.AD_CODE = e.AD_CODE)
  		  WHERE a.HR_ID = ?
  		    AND c.DECISION_STATUS = ?
 		  GROUP BY a.POST_CODE, c.DECISION_STATUS , a.POST_DATE , a.POST_TITLE , e.AD_NAME ,a.POST_START , a.POST_END 
 		  ORDER BY a.POST_DATE DESC
 		  LIMIT ?, ?
 	</entry>
	<entry key="insertnewpost">
		insert
	      into post
	    (
    	  POST_TITLE
	    , POST_CONTENT 
	    , POST_TO
    	, POST_START 
	    , POST_END 
    	, POST_ONLINE
    	, POST_DATE 
    	, POST_ADDRESS 
	    , POST_DAY
	    , PAYMENT 
    	, GENDER 
    	, ADVANTAGE 
    	, BENEFIT 
    	, FULLTIME_YN 
    	, POST_M_NAME 
     	, POST_M_EMAIL 
    	, POST_M_PHONE 
    	, EXP_CODE 
     	, JOB_CODE 
    	, PERIOD_CODE 
     	, HOUR_CODE 
    	, LOCATION_CODE 
    	, PAY_CODE 
    	, AGE_CODE 
    	, HR_ID 
	    , DEGREE_CODE 
    	, D_LIST_CODE 
    	 )
    	 values
    	 (
     	  ?
    	, ?
     	, ?
     	, ?
	    , ?
    	, ?
    	, NOW()
    	, ?
    	, ?
	    , ?
    	, ?
	    , ?
    	, ?
    	, ?
    	, ?
	    , ?
	    , ?
    	, ?
    	, ?
	    , ?
    	, ?
	    , ?
	    , ?
	    , ?
    	, ?
    	, ?
    	, LAST_	_ID()
	     )
	</entry>
	
	<entry key="checkDuplicationId">
		SELECT
		       COUNT(HR_ID)
		  FROM HR
		 WHERE HR_id = ?
	</entry>
	
	<entry key="selectApplicationList">
		<![CDATA[
		SELECT
               a.POST_CODE
     		 , a.POST_M_NAME
     		 , a.POST_TITLE
     		 , a.POST_TO
     		 , a.POST_END
     		 , (SELECT COUNT(b.APPLY_CODE)
          		  FROM APPLY b
         		 WHERE a.POST_CODE = b.POST_CODE 
       		   ) as 'countOfApplicant'
     		 , (SELECT COUNT(b.APPLY_CODE)
          		 FROM APPLY b
         		WHERE a.POST_CODE = b.POST_CODE
           		  AND b.APPLY_READ = false
       		   ) as 'unreadResume'
  		 FROM POST a
  		 JOIN DECISION_LIST c on(a.D_LIST_CODE = c.D_LIST_CODE)
 		WHERE HR_ID = ?
 		  AND c.DECISION_CODE IN (2,3)
 		GROUP BY a.POST_CODE, a.POST_M_NAME, a.POST_TITLE, a.POST_TO, a.POST_END
 	   HAVING 0 < (SELECT COUNT(b.APPLY_CODE)
                     FROM APPLY b
                    WHERE a.POST_CODE = b.POST_CODE 
                  )
        LIMIT ?, ?
        ]]>
 	</entry>
 	
	<entry key="updatehrInfo">
		UPDATE HR
	       SET HR_NAME = ?, HR_PHONE = ? , HR_EMAIL = ?
	     WHERE HR_ID = ?
	</entry>
	<entry key="selectAllPayList">
select 
       pap.POST_AD_CODE
     , p.POST_TITLE 
     , a.AD_NAME 
     , p.POST_DATE 
     , a.AD_PRICE * pap.POST_AD_WEEK 
     , pap.POST_AD_PAID 
  from post_ad_payment pap
  join post p on (pap.POST_CODE = p.POST_CODE)
  join ad a on (pap.AD_CODE = a.AD_CODE)
  join decision_list dl on (p.D_LIST_CODE = dl.D_LIST_CODE)
  join decision d on (d.DECISION_CODE = dl.DECISION_CODE)
 where p.HR_ID = ?
   and d.DECISION_STATUS = '승인'
 order by p.POST_DATE desc
		 limit ? , ?
	</entry>
	<entry key="selectPayListByCategory">
select 
       pap.POST_AD_CODE
     , p.POST_TITLE 
     , a.AD_NAME 
     , p.POST_DATE 
     , a.AD_PRICE * pap.POST_AD_WEEK 
     , pap.POST_AD_PAID 
  from post_ad_payment pap
  join post p on (pap.POST_CODE = p.POST_CODE)
  join ad a on (pap.AD_CODE = a.AD_CODE)
  join decision_list dl on (p.D_LIST_CODE = dl.D_LIST_CODE)
  join decision d on (d.DECISION_CODE = dl.DECISION_CODE)
 where p.HR_ID = ?
   and d.DECISION_STATUS = '승인'
   and pap.POST_AD_PAID = ?
 order by p.POST_DATE desc
		 limit ? , ?
	</entry>
	<entry key="selectPaymentDetail">
select 
       pap.POST_AD_CODE 
     , pap.POST_AD_DATE 
     , pap.P_METHOD_CODE 
     , pap.POST_AD_PAID 
     , a.AD_NAME 
     , pap.POST_AD_WEEK 
     , a.AD_PRICE 
     , a.AD_PRICE * pap.POST_AD_WEEK 
     , p.POST_CODE 
     , p.POST_START 
     , p.POST_END 
     , p.POST_M_NAME 
  from post_ad_payment pap 
  join post p on (pap.POST_CODE = p.POST_CODE)
  join ad a on (pap.AD_CODE = a.AD_CODE)
  join decision_list dl on (p.D_LIST_CODE = dl.D_LIST_CODE)
  join decision d on (dl.DECISION_CODE = d.DECISION_CODE)
 where p.HR_ID = ?
   and pap.POST_AD_CODE = ?
   and d.DECISION_STATUS ='승인'
	</entry>
	<entry key="selectPayCount">
  select
         pap.POST_AD_PAID 
       , IFNULL(COUNT(pap.POST_AD_CODE), 0) as 'COUNT'
    from post_ad_payment pap
    join post p on (pap.POST_CODE = p.POST_CODE)
    join ad a on (pap.AD_CODE = a.AD_CODE)
    join decision_list dl on (p.D_LIST_CODE = dl.D_LIST_CODE)
    join decision d on (d.DECISION_CODE = dl.DECISION_CODE)
   where p.HR_ID = ?
     and d.DECISION_STATUS = '승인'
   group by pap.post_ad_Paid;
</entry>
	<entry key="selectTotalApplicant">
		SELECT
       		   COUNT(a.APPLY_CODE) as "COUNT"
  		  FROM APPLY a
  		  JOIN POST b on(a.POST_CODE = b.POST_CODE)
  		  JOIN RESUME c on(a.RESUME_CODE = c.RESUME_CODE)
 		 WHERE a.POST_CODE = ?
   		   AND b.HR_ID = ?
   		   AND a.APPLY_CANCEL = FALSE;
	</entry>
	
	<entry key="applicants">
		SELECT
       		   a.APPLY_CODE
     		 , a.RESUME_CODE
     		 , a.POST_CODE
     		 , d.USER_NAME
     		 , a.APPLY_DATE
     		 , a.APPLY_READ
     		 , a.APPLY_YN  
     		 , b.POST_TITLE
     		 , b.POST_START
     		 , b.POST_END
     		 , b.ADVANTAGE as 'POST_ADVANTAGE'
     		 , c.RESUME_ADVANTAGE as 'RESUME_ADVANTAGE'
  		  FROM APPLY a
  		  JOIN POST b on(a.POST_CODE = b.POST_CODE)
  		  JOIN RESUME c on(a.RESUME_CODE = c.RESUME_CODE)
  		  JOIN USER d on(c.USER_CODE = d.USER_CODE)
 		 WHERE a.POST_CODE = ?
 		   AND b.HR_ID = ?
   		   AND a.APPLY_CANCEL = FALSE
	</entry>
	
	<entry key="updateApplyRead">
	     UPDATE APPLY a, POST b
		   SET APPLY_READ = 1
 		 WHERE APPLY_CODE = ?
   		   AND a.POST_CODE in (SELECT b.POST_CODE 
   			   		             FROM POST b
   			  		            WHERE b.HR_ID = ?
   					          )
	</entry>
	
	<entry key="lookResume">
		SELECT 
       		   b.USER_CODE 
  		  FROM APPLY a
  		  JOIN RESUME b ON(a.RESUME_CODE = b.RESUME_CODE)
 		 WHERE a.APPLY_CODE = ?
	</entry>
	
	<entry key="updateApplyYN">
		UPDATE APPLY 
   		   SET APPLY_YN = ?
 		 WHERE APPLY_CODE = ?
	</entry>
	
	<entry key="insertApplicantReport">
		 INSERT
   		   INTO REPORT
		(
  		  REPORT_REASON
		, REPORT_DATE 
		, POST_CODE 
		, USER_CODE 
		, D_LIST_CODE 
		)
		VALUES
		(
  		   ?
		 , NOW()
		 , ?
		 , (SELECT USER_CODE FROM RESUME WHERE RESUME_CODE = ?)
		 , LAST_INSERT_ID() 
		)
	</entry>
	<entry key="insertDefaultDecisionList">
       insert
         into decision_list 
       (
         D_LIST_REASON
       , D_LIST_DATE
       , ADMIN_ID
       , DECISION_CODE
       , D_LIST_TYPE_CODE
       )
       values
      (
        null
      , null
      , null
      , 1
      , ?
 	  )
	</entry>
	
	<entry key="selectCountReported">
		SELECT
       			COUNT(a.REPORT_CODE) AS "COUNT"
  		  FROM REPORT a
  		  JOIN DECISION_LIST b ON(a.D_LIST_CODE = b.D_LIST_CODE)
 		 WHERE a.POST_CODE IN (SELECT f.POST_CODE
        		                 FROM POST f 
                		        WHERE f.HR_ID = ?)
   		   AND b.D_LIST_TYPE_CODE = 1
	</entry>
	
	<entry key="selectApplicantReported">
		SELECT
       		   a.REPORT_DATE
     		 , a.REPORT_REASON
     		 , b.POST_M_NAME
     		 , b.POST_TITLE
     		 , c.D_LIST_DATE
     		 , c.D_LIST_REASON
     		 , d.DECISION_STATUS
     		 , e.USER_NAME
  		 FROM REPORT a
  		 JOIN POST b ON(a.POST_CODE = b.POST_CODE)
  		 JOIN DECISION_LIST c ON (a.D_LIST_CODE = c.D_LIST_CODE)
  		 JOIN DECISION d ON(c.DECISION_CODE = d.DECISION_CODE)
  		 JOIN USER e ON(a.USER_CODE = e.USER_CODE)
 		WHERE a.POST_CODE IN (SELECT f.POST_CODE
                         		FROM POST f 
                        	   WHERE f.HR_ID = ?)
   		  AND c.D_LIST_TYPE_CODE = 1
   		LIMIT ?,?
	</entry>
	
	<entry key="selectUsername">
		 SELECT 
        		a.USER_NAME
   		   FROM USER a
   		   JOIN RESUME b on(a.USER_CODE = b.USER_CODE)
  		  WHERE b.RESUME_CODE = ?
	</entry>
	<entry key="updatePaymentStatus">
		update post_ad_payment 
   set post_ad_date = now() , POST_AD_PAID = ? , P_METHOD_CODE = ?
  where post_Ad_code = ?
	</entry>
		<entry key="insertPostReport">
		 INSERT
   		   INTO REPORT
		(
  		  REPORT_REASON
		, REPORT_DATE 
		, POST_CODE 
		, USER_CODE 
		, D_LIST_CODE 
		)
		VALUES
		(
  		   ?
		 , NOW()
		 , ?
		 , (SELECT USER_CODE FROM RESUME WHERE RESUME_CODE = ?)
		 , LAST_INSERT_ID() 
		)
	</entry>
</properties>